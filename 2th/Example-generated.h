/*
 * Generated by gdbus-codegen 2.58.1 from com.Yanlin.Gdbus.Example.xml. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __EXAMPLE_GENERATED_H__
#define __EXAMPLE_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.Yanlin.Gdbus.Example */

#define CYANLIN_TYPE_GDBUS_EXAMPLE (cyanlin_gdbus_example_get_type ())
#define CYANLIN_GDBUS_EXAMPLE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), CYANLIN_TYPE_GDBUS_EXAMPLE, CYanlinGdbusExample))
#define CYANLIN_IS_GDBUS_EXAMPLE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), CYANLIN_TYPE_GDBUS_EXAMPLE))
#define CYANLIN_GDBUS_EXAMPLE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), CYANLIN_TYPE_GDBUS_EXAMPLE, CYanlinGdbusExampleIface))

struct _CYanlinGdbusExample;
typedef struct _CYanlinGdbusExample CYanlinGdbusExample;
typedef struct _CYanlinGdbusExampleIface CYanlinGdbusExampleIface;

struct _CYanlinGdbusExampleIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_my_method1) (
    CYanlinGdbusExample *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_InArg);

  gboolean (*handle_my_method2) (
    CYanlinGdbusExample *object,
    GDBusMethodInvocation *invocation,
    GVariant *arg_InArg);

  void (*my_signal1) (
    CYanlinGdbusExample *object,
    const gchar *arg_Value);

  void (*my_signal2) (
    CYanlinGdbusExample *object,
    GVariant *arg_Value);

};

GType cyanlin_gdbus_example_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *cyanlin_gdbus_example_interface_info (void);
guint cyanlin_gdbus_example_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void cyanlin_gdbus_example_complete_my_method1 (
    CYanlinGdbusExample *object,
    GDBusMethodInvocation *invocation,
    const gchar *OutArg);

void cyanlin_gdbus_example_complete_my_method2 (
    CYanlinGdbusExample *object,
    GDBusMethodInvocation *invocation,
    GVariant *OutArg);



/* D-Bus signal emissions functions: */
void cyanlin_gdbus_example_emit_my_signal1 (
    CYanlinGdbusExample *object,
    const gchar *arg_Value);

void cyanlin_gdbus_example_emit_my_signal2 (
    CYanlinGdbusExample *object,
    GVariant *arg_Value);



/* D-Bus method calls: */
void cyanlin_gdbus_example_call_my_method1 (
    CYanlinGdbusExample *proxy,
    const gchar *arg_InArg,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean cyanlin_gdbus_example_call_my_method1_finish (
    CYanlinGdbusExample *proxy,
    gchar **out_OutArg,
    GAsyncResult *res,
    GError **error);

gboolean cyanlin_gdbus_example_call_my_method1_sync (
    CYanlinGdbusExample *proxy,
    const gchar *arg_InArg,
    gchar **out_OutArg,
    GCancellable *cancellable,
    GError **error);

void cyanlin_gdbus_example_call_my_method2 (
    CYanlinGdbusExample *proxy,
    GVariant *arg_InArg,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean cyanlin_gdbus_example_call_my_method2_finish (
    CYanlinGdbusExample *proxy,
    GVariant **out_OutArg,
    GAsyncResult *res,
    GError **error);

gboolean cyanlin_gdbus_example_call_my_method2_sync (
    CYanlinGdbusExample *proxy,
    GVariant *arg_InArg,
    GVariant **out_OutArg,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define CYANLIN_TYPE_GDBUS_EXAMPLE_PROXY (cyanlin_gdbus_example_proxy_get_type ())
#define CYANLIN_GDBUS_EXAMPLE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), CYANLIN_TYPE_GDBUS_EXAMPLE_PROXY, CYanlinGdbusExampleProxy))
#define CYANLIN_GDBUS_EXAMPLE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), CYANLIN_TYPE_GDBUS_EXAMPLE_PROXY, CYanlinGdbusExampleProxyClass))
#define CYANLIN_GDBUS_EXAMPLE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), CYANLIN_TYPE_GDBUS_EXAMPLE_PROXY, CYanlinGdbusExampleProxyClass))
#define CYANLIN_IS_GDBUS_EXAMPLE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), CYANLIN_TYPE_GDBUS_EXAMPLE_PROXY))
#define CYANLIN_IS_GDBUS_EXAMPLE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), CYANLIN_TYPE_GDBUS_EXAMPLE_PROXY))

typedef struct _CYanlinGdbusExampleProxy CYanlinGdbusExampleProxy;
typedef struct _CYanlinGdbusExampleProxyClass CYanlinGdbusExampleProxyClass;
typedef struct _CYanlinGdbusExampleProxyPrivate CYanlinGdbusExampleProxyPrivate;

struct _CYanlinGdbusExampleProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  CYanlinGdbusExampleProxyPrivate *priv;
};

struct _CYanlinGdbusExampleProxyClass
{
  GDBusProxyClass parent_class;
};

GType cyanlin_gdbus_example_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CYanlinGdbusExampleProxy, g_object_unref)
#endif

void cyanlin_gdbus_example_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
CYanlinGdbusExample *cyanlin_gdbus_example_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
CYanlinGdbusExample *cyanlin_gdbus_example_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void cyanlin_gdbus_example_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
CYanlinGdbusExample *cyanlin_gdbus_example_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
CYanlinGdbusExample *cyanlin_gdbus_example_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define CYANLIN_TYPE_GDBUS_EXAMPLE_SKELETON (cyanlin_gdbus_example_skeleton_get_type ())
#define CYANLIN_GDBUS_EXAMPLE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), CYANLIN_TYPE_GDBUS_EXAMPLE_SKELETON, CYanlinGdbusExampleSkeleton))
#define CYANLIN_GDBUS_EXAMPLE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), CYANLIN_TYPE_GDBUS_EXAMPLE_SKELETON, CYanlinGdbusExampleSkeletonClass))
#define CYANLIN_GDBUS_EXAMPLE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), CYANLIN_TYPE_GDBUS_EXAMPLE_SKELETON, CYanlinGdbusExampleSkeletonClass))
#define CYANLIN_IS_GDBUS_EXAMPLE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), CYANLIN_TYPE_GDBUS_EXAMPLE_SKELETON))
#define CYANLIN_IS_GDBUS_EXAMPLE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), CYANLIN_TYPE_GDBUS_EXAMPLE_SKELETON))

typedef struct _CYanlinGdbusExampleSkeleton CYanlinGdbusExampleSkeleton;
typedef struct _CYanlinGdbusExampleSkeletonClass CYanlinGdbusExampleSkeletonClass;
typedef struct _CYanlinGdbusExampleSkeletonPrivate CYanlinGdbusExampleSkeletonPrivate;

struct _CYanlinGdbusExampleSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  CYanlinGdbusExampleSkeletonPrivate *priv;
};

struct _CYanlinGdbusExampleSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType cyanlin_gdbus_example_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CYanlinGdbusExampleSkeleton, g_object_unref)
#endif

CYanlinGdbusExample *cyanlin_gdbus_example_skeleton_new (void);


G_END_DECLS

#endif /* __EXAMPLE_GENERATED_H__ */
